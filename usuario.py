
import os
import json 

archivo = "Paises.json"


def escribir_json(nombre_archivo, diccionario):
    try:
        with open(nombre_archivo,"w", encoding='utf-8') as archivo:
            json.dump(diccionario, archivo, indent=4)
            input("""
                "nombre": "Indonesia",
                "codigo_iso": "ID",
                "codigo_iso3": "IDN"
                """)
        print(f"Los datos fueron escritos correctamente en el archivo {nombre_archivo}")
    except (KeyError, ValueError) as e:
        print(f"Error al escribir en el archivo {nombre_archivo} : {e}")
    except IOError as e:
        print(f"Ocurrio un error al escribir en el archivo {nombre_archivo} : {e}")

def leer_json(nombre_archivo):
    try:
        with open(nombre_archivo, "r", encoding='utf-8') as archivo:
            return json.load(archivo)
    except FileNotFoundError:
        print(f"‚ö†Ô∏è El archivo '{nombre_archivo}' no fue encontrado. Cre√°ndolo vac√≠o...")
        escribir_json(nombre_archivo, [])  # Crear archivo vac√≠o
        return []
    except json.JSONDecodeError:
        print(f"‚ùå Error: El archivo '{nombre_archivo}' no tiene formato JSON v√°lido.")
        return []
    except IOError as e:
        print(f"‚ùå Error al leer el archivo '{nombre_archivo}': {e}")
        return []

def agregar_nuevos_elementos_json(json,new_dicc):
        datos = leer_json(json)
        datos.append(new_dicc)
        escribir_json(json,datos)

def gestion_datos(nombre_archivo,new_dicc):
    datos = leer_json(nombre_archivo)
    datos.append(new_dicc)
    new_dicc = {
            "nombre": input("Ingrese el nombre del pa√≠s '(por defecto: Indonesia)': "),
            "codigo_iso": input("Ingrese el c√≥digo ISO '(por defecto: ID)': "),
            "codigo_iso3": input("Ingrese el c√≥digo ISO3 '(por defecto: IDN)': ") 
        }
    if any(pais["nombre"] == new_dicc["nombre"] for pais in datos):
        print("Ya est√° registrado")
    else:
        agregar_nuevos_elementos_json("paises.json",new_dicc)
new_dic={}
def obtener_paises():
    paises = gestion_datos('paises.json')
    return [(p["nombre"], p["codigo_iso"], p["codigo_iso3"]) for p in paises]

def interaccion_paises():
    print("Colombia supremasi")
def generar_informe():
    print("Pere que el sistema esta lento")
def modulo_reportes():
    pais = input("Por favor diga el pais del cual desea ver el modulo de reporte: ").capitalize()
    opc = input(""" Seleccione:
1. Obtener todos los datos de poblaci√≥n para un pais desde 2000 hasta 2023.
2. Listar los pa√≠ses con su informaci√≥n de c√≥digo ISO y c√≥digo ISO3.
3. Datos de poblaci√≥n para el indicador 'SP.POP.TOTL'.
4. Obtener los datos de poblaci√≥n de los √∫ltimos 10 a√±os para todos los pa√≠ses.
5. Total de poblaci√≥n para el pais de su eleccion en el a√±o 2022.
6. Poblaci√≥n total registrada antes del a√±o 2000.
7. Poblaci√≥n total registrada despu√©s del a√±o 2010.
8. Porcentaje de crecimiento de la poblaci√≥n de cualquier pais entre 2010 y 2020.
9. Poblaci√≥n del pais que desee en el a√±o 2023 (si est√° disponible).
10. Obtener el a√±o con la poblaci√≥n m√°s baja para el pais selecionado.
11. N√∫mero de registros de poblaci√≥n por a√±o.
12. Pa√≠ses con un crecimiento poblacional mayor al 2% anual en los √∫ltimos 5 a√±os.
13. Listar los a√±os en los que la poblaci√≥n del pais escogido super√≥ los 1,000 millones.
14. Obtener la poblaci√≥n total registrada para todos los pa√≠ses en el a√±o 2000.
15. Obtener la poblaci√≥n menos registrada para el pais elegido en los √∫ltimos 20 a√±os.
16. Promedio de poblaci√≥n registrada por a√±o para el pais escogido desde 1980 hasta 2020.
17. Cantidad de a√±os con datos de poblaci√≥n disponibles para el pais escogido.
18. Listar los pa√≠ses con datos de poblaci√≥n disponibles para cada a√±o entre 2000 y 2023.
19. Poblaci√≥n total de el pais escogido en 2019.
20. A√±os en los que la poblaci√≥n de el pais escogido creci√≥ m√°s de 1 mill√≥n en comparaci√≥n con el a√±o anterior.
21. Poblaci√≥n registrada de el pais escogido en cada d√©cada desde 1960.
22. Poblaci√≥n total registrada para todos los pa√≠ses en 2023.
23. A√±os en los que no hay datos de poblaci√≥n disponibles para el pais escogido.
24. A√±o con la poblaci√≥n m√°s alta registrada para el pais escogido.
25. A√±os con datos de poblaci√≥n disponibles para m√°s de 50 pa√≠ses.
""")
    while True:
        for i in leer_json("paises.json"):
            if i["nombre"] in pais:
                while True:
                    if opc == "1":
                        print("Puto")
                        break
                    elif opc =="2":
                        print("Puto") 
                        break
                    elif opc =="3":
                        print("Puto")
                        break 
                    elif opc =="4":
                        print("Puto")
                        break
                    elif opc =="5":
                        print("Puto") 
                        break
                    elif opc =="6":
                        print("Puto") 
                        break
                    elif opc =="7":
                        print("Puto") 
                        break
                    elif opc =="8":
                        print("Puto") 
                        break
                    elif opc =="9":
                        print("Puto") 
                        break
                    elif opc =="10":
                        print("Puto") 
                        break
                    elif opc =="11":
                        print("Puto") 
                        break
                    elif opc =="12":
                        print("Puto") 
                        break
                    elif opc =="13":
                        print("Puto") 
                        break
                    elif opc =="14":
                        print("Puto") 
                        break
                    elif opc =="15":
                        print("Puto") 
                        break
                    elif opc =="16":
                        print("Puto") 
                        break
                    elif opc =="17":
                        print("Puto") 
                        break
                    elif opc =="18":
                        print("Puto") 
                        break
                    elif opc =="19":
                        print("Puto") 
                        break
                    elif opc =="20":
                        print("Puto") 
                        break
                    elif opc =="21":
                        print("Puto") 
                        break
                    elif opc =="22":
                        print("Puto") 
                        break
                    elif opc =="23":
                        print("Puto") 
                        break
                    elif opc =="24":
                        print("Puto") 
                        break
                    elif opc =="25":
                        print("Puto")
                        break 
                    else:
                        print("Escoja una opcion presentada")
                        return modulo_reportes()
        else:
            print("por favor identifique un pais existente en el sistema de lo contrario registrelo por favor.")
            break

opciones = { "2": interaccion_paises, "3": generar_informe, "4": modulo_reportes}

while True:
    os.system("cls" if os.name =="nt" else"clear")
    print("""
        üÇ†  üÇ°  üÇ´  üÇ¨  üÇ≠  üÇÆ  üÉü üÉü  üÇ±  üÇª  üÇº  üÇΩ  üÇæ  üÇ†
                Gestion de datos del IEG
        üÇ†  üÉÅ  üÉã  üÉå  üÉç  üÉé  üÉü üÉü  üÉë  üÉõ  üÉú  üÉù  üÉû  üÇ†
        """)
    print("Ingrese \n1. Ver Gesti√≥n de Datos de Poblaci√≥n \n2. Ver Interacci√≥n con Pa√≠ses y Indicadores \n3. Generar un informe \n4. Ver M√≥dulo de Reportes \n5. Salir")
    opc = input("Ingrese la opci√≥n requerida: \n")
    if opc in opciones:
        os.system("cls" if os.name =="nt" else"clear")
        opciones[opc]()
        input("\n Presione enter para continuar")
    elif opc == "1":
        os.system("cls" if os.name =="nt" else"clear")
        gestion_datos("paises.json",new_dic)
        input("\n Presione enter para continuar")
    elif opc == "5":
        print("Saliendo...")
        break
    else:
        print("Lea bien...")
